akka {
//  loglevel = INFO
  loglevel = INFO
  stdout-loglevel = INFO
  loggers = ["akka.event.Logging$DefaultLogger"]

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serialize-messages = on
    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
//      "java.io.Serializable" = proto
      "com.trueaccord.scalapb.GeneratedMessage" = proto
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?HOST}
      port = ${PORT}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://distributedTransform@127.0.0.1:2551"
//      "akka.tcp://square@127.0.0.1:2552",
//      "akka.tcp://square@127.0.0.1:2553"
    ]
    roles = [${ROLE}]
    auto-down = on

    role {
      seed.min-nr-of-members = 1
      master.min-nr-of-members = 1
      worker.min-nr-of-members = 3
    }
  }
}
